data(DNase)
help(DNase)
View(DNase)
plot(1:100, 1:100, log='xy')
?t.test
DNase2 = DNase[which(DNase$Run==2),]
DNase3 = DNase[which(DNase$Run==3),]
t.test(DNase2$density,DNase3$density,paired=TRUE)
data(cars)
info(cars)
cars
class(cars)
dim(cars)
len(cars[,1])
length(cars[,1])
class(cars[,1])
class(dim(cars[,1]))
class(dim(cars))
http://www.bioconductor.org/packages/2.11/bioc/html/limma.html
#Limma
source("http://bioconductor.org/biocLite.R")
biocLite("estrogen")
dir(datadir)
datadir <- file.path(.find.package("estrogen"),"extdata")
datadir <- file.path(find.package("estrogen"),"extdata")
datadir
dir(datadir)
targets<-readTargets("phenoData.txt",path=datadir,sep="",row.names="filename")
library(limma)
source("http://bioconductor.org/biocLite.R")
biocLite("limma")
library(limma)
targets<-readTargets("phenoData.txt",path=datadir,sep="",row.names="filename")
targets
ab<-ReadAffy(filenames=targets$filename,celfile.path=datadir,phenoData=targets)
ab<-readAffy(filenames=targets$filename,celfile.path=datadir,phenoData=targets)
library(affy)
ab<-ReadAffy(filenames=targets$filename,celfile.path=datadir,phenoData=targets)
class(ab)
ab
eset<-rma(ab)
class(eset)
eset
targets
targets[2]
TS <- paste(targets[,2],targets[,3],sep="")
TS
factor(TS)
~TS
TS <- factor(TS)
~TS
~TS-1
model.matrixTS-1
TS-1
TS
design <- model.matrix(~TS-1)
design
colnames(design)<-levels(TS)
design
fit1=lmFit(eset,design)
fot1
fit1
class(exprs(eset))
head(exprs(eset))
fit1=lmFit(exprs(eset),design)
source('~/.active-rstudio-document')
#Preprocessing of microarray data?
library(limma)
library(estrogen)
library(affy)
datadir <- file.path(find.package("estrogen"),"extdata")
targets<-readTargets("phenoData.txt",path=datadir,sep="",row.names="filename")
ab<-ReadAffy(filenames=targets$filename,celfile.path=datadir,phenoData=targets)
eset<-rma(ab)
ab
class(ab)
library(cdf)
cdfName(ab)
image(ab)
ab
cdfName(ab())
cdfName(ab)
ab[1]
image(ab[1])
probe.datamatrix <- exprs(ab)
dim(probe.datamatrix)
length(probeNames(ab))
boxplot(ab)
x <- exprs(eset)
eset2 <- gcrma(ab)
library("gcrma")
biocLite("gcrma")
library(gcrma)
x <- exprs(eset)
eset2 <- gcrma(ab)
dim(x)
head(x)
m <- x[,1]-x[,2]
a <- (x[,1]+x[,2])/2
plot(a,m)
plot(m~a)
plot(m~a, pch=16)
plot(m~a, pch=16, cex=0.2)
design
fit1=lmFit(eset,design)
fit2=lmFit(exprs(eset),design)
fita=lmFit(exprs(eset),design)
cont.matrix = makeContrasts(TIME=absent48-absent10, E48=present48-absent48, levels=design)
cont.matrix
fit2
names(fit2)
fit2 = contrasts.fit(fit1, cont.matrix)
fit2 = eBayes(fit2)
names(fit2)
fit2$coefficients
fit2$coef
head(fit2$coef)
which.max(fit2$coef[,1])
topTable(fit2, coef=2, number=15)
setwd("~/GitHub/balboa")
a <- as.matrix(read.table('blast/blast_all_filtered.csv'))
a <- as.matrix(read.table('blast/blast_all_filtered.csv', sep=','))
a
head(a)
a <- as.matrix(read.table('blast/blast_all_filtered.csv', sep=',', header=T))
head(a)
a <- as.matrix(read.table('blast/blast_all_filtered.csv', sep=',', header=T, quote=F))
unique(a[,1])
hist(a['cluster'])
head(a)
hist(a[,'cluster'])
cluster_num <- table(a[,'cluster'])
hist(cluster_num)
cluster_num
barplot(cluster_n)
barplot(cluster_num)
png('figures/match_cluster_distribution',height=600, width=800)
barplot(cluster_num, main='Distribution of all CRISPR matches',xlab='cluster',ylab='# matches')
dev.off()
source('~/GitHub/balboa/Rcode/stats1.R')
#plot of distribution of clusters across significant matches
png('figures/match_cluster_distribution',height=600, width=800)
barplot(cluster_num, main='Distribution of all CRISPR matches',xlab='cluster',ylab='# matches')
dev.off()
dev.off()
dev.off()
#plot of distribution of clusters across significant matches
png('figures/match_cluster_distribution.png',height=600, width=800)
barplot(cluster_num, main='Distribution of all CRISPR matches',xlab='cluster',ylab='# matches')
dev.off()
head(match_table)
match_table <- as.matrix(read.table('blast/blast_all_filtered.csv', sep=',', header=T))
myco_nums <- table(match_table[,'qseqid'])
png('figures/match_qseqid_distribution.png',height=600, width=800)
barplot(myco_nums, main='Distribution of all CRISPR matches',xlab='qseqid',ylab='# matches', )
dev.off()
myco_nums
names(myco_nums)
names(myco_nums) <- 1:34
myco_nums
myco_nums <- table(match_table[,'qseqid'])
png('figures/match_qseqid_distribution.png',height=600, width=800)
barplot(myco_nums, main='Distribution of all CRISPR matches',xlab='qseqid',ylab='# matches', )
dev.off()
myco_nums <- table(match_table[,'qseqid'])
names(myco_nums) <- 1:34
png('figures/match_qseqid_distribution.png',height=600, width=800)
barplot(myco_nums, main='Distribution of all CRISPR matches',xlab='qseqid',ylab='# matches', )
dev.off()
metadata <- as.matrix(read.table('phages/Sequenced Phage Metadata.tsv', sep='\t',header=T))
metadata <- as.matrix(read.table('phages/Sequenced Phage Metadata.tsv', sep='\t',header=F,))
metadata <- as.matrix(read.table('phages/Sequenced Phage Metadata.tsv', sep='\t',header=F))
seq_phage_clusters <- as.matrix(read.table('phages/sequenced_phage_clusters.csv', sep='\t',header=T))
seq_phage_clusters <- as.matrix(read.table('phages/sequenced_phage_clusters.csv', sep=',',header=T))
all_phage_clusters <- as.matrix(read.table('phages/all_phage_clusters.csv', sep=',',header=T))
seq_cluster_nums <- table(seq_phage_clusters)
all_cluster_nums <- table(all_phage_clusters)
barplot(cluster_nums)
cluster_nums <- table(match_table[,'cluster'])
barplot(cluster_nums)
barplot(seq_cluster_nums, add=T, col='red')
seq_cluster_nums <- table(seq_phage_clusters[,2])
all_cluster_nums <- table(all_phage_clusters[,2])
seq_cluster_nums <- table(seq_phage_clusters[,2])
all_cluster_nums <- table(all_phage_clusters[,2])
barplot(cluster_nums)
barplot(seq_cluster_nums, add=T, col='red')
barplot(all_cluster_nums, add=T, col='blue')
source('~/GitHub/balboa/Rcode/stats1.R')
seq_cluster_nums <- table(seq_phage_clusters[,2])
png('figures/sequenced_phage_cluster_distribution.png',height=600, width=800)
barplot(seq_cluster_nums, main='Distribution of clusters in sequenced phages',xlab='cluster',ylab='# matches')
dev.off()
#all phages
all_cluster_nums <- table(all_phage_clusters[,2])
png('figures/all_phage_cluster_distribution.png',height=600, width=800)
barplot(all_cluster_nums, main='Distribution of clusters in all phages',xlab='cluster',ylab='# matches')
dev.off()
dev.off()
dev.off()
all_cluster_nums
len(all_cluster_nums)
length(all_cluster_nums)
all_cluster_nums <- table(all_phage_clusters[,2])[1:49]
length(all_cluster_nums)
source('~/GitHub/balboa/Rcode/stats1.R')
all_cluster_nums <- table(all_phage_clusters[,2])[1:49]
png('figures/all_phage_cluster_distribution.png',height=600, width=800)
barplot(all_cluster_nums, main='Distribution of clusters in all phages (not unclustered)',xlab='cluster',ylab='# matches')
dev.off()
source('~/GitHub/balboa/Rcode/stats1.R')
all_cluster_nums.freq
frequency(all_cluster_nums)
compare <- cbind(cluster_nums/(sum(cluster_nums)), seq_cluster_nums/(sum(seq_cluster_nums)),all_cluster_nums/sum(all_cluster_nums))
compare
length(cluster_num)
length(cluster_nums)
length(seq_cluster_nums)
names(seq_cluster_nums) %in% names(all_cluster_nums)
names(all_cluster_nums) %in% names(seq_cluster_nums)
all_cluster_nums[42]
c((1:41),(43:49))
all_cluster_nums <- table(all_phage_clusters[,2])[c((1:41),(43:49))]
length(all_cluster_nums)
names(all_cluster_nums) %in% names(seq_cluster_nums)
cluster_names= names(all_cluster_nums)
cluster_mat= cbind(seq_cluster_nums/(sum(seq_cluster_nums)),all_cluster_nums/sum(all_cluster_nums))
cluster_mat
m <- matrix(nrow=48, ncol=1,row.names=cluster_names)
m
m <- matrix(nrow=48, ncol=1,rownames=cluster_names)
m <- matrix(nrow=48, ncol=1)
m
rownames(m)<- cluster_names
m
for (i in 1:48){}
for (i in 1:48){}
for (i in 1:48){
if cluster_names[i] %in% names(cluster_nums){
m[i] <- cluster_nums[names(m)[i]]
}
}
for (i in 1:48){
if cluster_names[i] %in% names(cluster_nums){
m[i] <- cluster_nums[names(m)[i]]
}
}
for (i in 1:48){
if (cluster_names[i] %in% names(cluster_nums){
m[i] <- cluster_nums[names(m)[i]]
}
}
for (i in 1:48){
if (cluster_names[i] %in% names(cluster_nums)){
m[i] <- cluster_nums[names(m)[i]]
}
}
for (i in 1:48){
if (cluster_names[i] %in% names(cluster_nums)){
print names(m[i])
m[i] <- cluster_nums[names(m)[i]]
}
}
for (i in 1:48){
if (cluster_names[i] %in% names(cluster_nums)){
print (names(m[i]))
m[i] <- cluster_nums[names(m)[i]]
}
}
names(m)
for (i in 1:48){
if (cluster_names[i] %in% names(cluster_nums)){
print (names(m[i]))
m[i] <- cluster_nums[rownames(m)[i]]
}
}
rownames(m)
m
cbind(cluster_mat, m)
m<- matrix(0, nrow=48, ncol=1)
m
#comparison to theroretical null distribution
cluster_names= names(all_cluster_nums)
m<- matrix(0, nrow=48, ncol=1)
rownames(m) <- cluster_names
cluster_freq = cluster_nums/sum(cluster_nums)
for (i in 1:48){
if (cluster_names[i] %in% names(cluster_freq)){
m[i] <- cluster_freq[rownames(m)[i]]
}
}
cluster_mat= cbind(cluster_freq,seq_cluster_nums/(sum(seq_cluster_nums)),all_cluster_nums/sum(all_cluster_nums))
colnames(cluster_mat) <- c('CRISPR matches', 'sequenced phages','all phages')
dim(cluster_feq)
dim(cluster_feeq)
dim(cluster_freq)
cluster_mat= cbind(m,seq_cluster_nums/(sum(seq_cluster_nums)),all_cluster_nums/sum(all_cluster_nums))
colnames(cluster_mat) <- c('CRISPR matches', 'sequenced phages','all phages')
barplot(cluster_mat, col=c("darkblue","red","green"),legend=rownames(cluster_mat), main='Distribution of clusters', xlab='Cluster',ylab='Frequency',beside=T)
barplot(cluster_mat)
barplot(cluster_mat, col=c("darkblue","red","green"),legend=rownames(cluster_mat), main='Distribution of clusters', xlab='Cluster',ylab='Frequency',beside=T)
barplot(cluster_mat, col=c("darkblue","red","green"),legend=col(cluster_mat), main='Distribution of clusters', xlab='Cluster',ylab='Frequency',beside=T)
barplot(cluster_mat, col=c("darkblue","red","green"),legend=colnames(cluster_mat), main='Distribution of clusters', xlab='Cluster',ylab='Frequency',beside=T)
png('figures/cluster_distribution_comparison.png',width=2000, height=800)
barplot(cluster_mat, col=c("green","red","darkblue"),legend=colnames(cluster_mat), main='Distribution of clusters', xlab='Cluster',ylab='Frequency',beside=T)
dev.off()
cluster_mat
barplot(t(cluster_mat), col=c("green","red","darkblue"),legend=rownames(cluster_mat), main='Distribution of clusters', xlab='Cluster',ylab='Frequency',beside=T)
png('figures/cluster_distribution_comparison.png',width=2000, height=800)
barplot(t(cluster_mat), col=c("green","red","darkblue"),legend=colnames(cluster_mat), main='Distribution of clusters', xlab='Cluster',ylab='Frequency',beside=T)
dev.off()
source('~/GitHub/balboa/Rcode/stats1.R')
