data(DNase)
help(DNase)
View(DNase)
plot(1:100, 1:100, log='xy')
?t.test
DNase2 = DNase[which(DNase$Run==2),]
DNase3 = DNase[which(DNase$Run==3),]
t.test(DNase2$density,DNase3$density,paired=TRUE)
data(cars)
info(cars)
cars
class(cars)
dim(cars)
len(cars[,1])
length(cars[,1])
class(cars[,1])
class(dim(cars[,1]))
class(dim(cars))
http://www.bioconductor.org/packages/2.11/bioc/html/limma.html
#Limma
source("http://bioconductor.org/biocLite.R")
biocLite("estrogen")
dir(datadir)
datadir <- file.path(.find.package("estrogen"),"extdata")
datadir <- file.path(find.package("estrogen"),"extdata")
datadir
dir(datadir)
targets<-readTargets("phenoData.txt",path=datadir,sep="",row.names="filename")
library(limma)
source("http://bioconductor.org/biocLite.R")
biocLite("limma")
library(limma)
targets<-readTargets("phenoData.txt",path=datadir,sep="",row.names="filename")
targets
ab<-ReadAffy(filenames=targets$filename,celfile.path=datadir,phenoData=targets)
ab<-readAffy(filenames=targets$filename,celfile.path=datadir,phenoData=targets)
library(affy)
ab<-ReadAffy(filenames=targets$filename,celfile.path=datadir,phenoData=targets)
class(ab)
ab
eset<-rma(ab)
class(eset)
eset
targets
targets[2]
TS <- paste(targets[,2],targets[,3],sep="")
TS
factor(TS)
~TS
TS <- factor(TS)
~TS
~TS-1
model.matrixTS-1
TS-1
TS
design <- model.matrix(~TS-1)
design
colnames(design)<-levels(TS)
design
fit1=lmFit(eset,design)
fot1
fit1
class(exprs(eset))
head(exprs(eset))
fit1=lmFit(exprs(eset),design)
source('~/.active-rstudio-document')
#Preprocessing of microarray data?
library(limma)
library(estrogen)
library(affy)
datadir <- file.path(find.package("estrogen"),"extdata")
targets<-readTargets("phenoData.txt",path=datadir,sep="",row.names="filename")
ab<-ReadAffy(filenames=targets$filename,celfile.path=datadir,phenoData=targets)
eset<-rma(ab)
ab
class(ab)
library(cdf)
cdfName(ab)
image(ab)
ab
cdfName(ab())
cdfName(ab)
ab[1]
image(ab[1])
probe.datamatrix <- exprs(ab)
dim(probe.datamatrix)
length(probeNames(ab))
boxplot(ab)
x <- exprs(eset)
eset2 <- gcrma(ab)
library("gcrma")
biocLite("gcrma")
library(gcrma)
x <- exprs(eset)
eset2 <- gcrma(ab)
dim(x)
head(x)
m <- x[,1]-x[,2]
a <- (x[,1]+x[,2])/2
plot(a,m)
plot(m~a)
plot(m~a, pch=16)
plot(m~a, pch=16, cex=0.2)
design
fit1=lmFit(eset,design)
fit2=lmFit(exprs(eset),design)
fita=lmFit(exprs(eset),design)
cont.matrix = makeContrasts(TIME=absent48-absent10, E48=present48-absent48, levels=design)
cont.matrix
fit2
names(fit2)
fit2 = contrasts.fit(fit1, cont.matrix)
fit2 = eBayes(fit2)
names(fit2)
fit2$coefficients
fit2$coef
head(fit2$coef)
which.max(fit2$coef[,1])
topTable(fit2, coef=2, number=15)
qchisq(0.005, 35)
qchisq(0.995, 35)
setwd("~/GitHub/tango/src")
tud <- as.matrix(read.table('hatful60TUD.tsv'))
d <- dist(tud)
fit <- hclist(d)
fit <- hclust(d)
plot(fit)
d <- dist(tud, method='euclidean')
# clustering on TUD distance
tud <- as.matrix(read.table('~/GitHub/tango/src/hatful60TUD.tsv'))
d <- dist(tud, method='euclidean')
# try different clustering methods
fit1 <- hclust(d,method='ward')
fit2 <- hclust(d,method='complete')
fit3 <- hclust(d,method='single')
fit4 <- hclust(d,method='median')
par(mfrow=c(2,2))
plot(fit1)
plot(fit2)
plot(fit3)
plot(fit4)
d
