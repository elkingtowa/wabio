#!/usr/bin/env python


import os
import sys

if len(sys.argv) < 2:
    print >>sys.stderr, """\
To list files:
    phylofiles [-e|-n] <base dir> <file suffix>
   
    -e list only files that exist
    -n list only files that do not exist

To symbolically link files
    phylofiles -s <base dir1> <file suffix1> <base dir2> <file suffix2>
    
    will create a symbolic link from
    <base dir2>/famid/famid.<file suffix2>
    to 
    <base dir1>/famid/famid.<file suffix1>
    
    if <base dir1>/famid/famid.<file suffix1> exists
    
    NOTE: <base dir> or <suffix> can be the same between version 1 and 2
    
"""
    sys.exit(1)

# parse args
action = "list"
exists = None
rest = []

for i in xrange(1, len(sys.argv)):

    if sys.argv[i] == "-e":
        action = "list"
        exists = True
    elif sys.argv[i] == "-n":
        action = "list"
        exists = False
    elif sys.argv[i] == "-s":
        action = "symlink"
    else:
        rest = sys.argv[i:]
        break
        
if action == "list":
    path, ext = rest

    for name in os.listdir(path):
        fn = os.path.join(path, name, name + ext)

        if exists is None:
            print fn

        elif os.path.exists(fn) == exists:
            print fn

elif action == "symlink":
    path1, ext1, path2, ext2 = rest
    
    for name in os.listdir(path1):
        fn1 = os.path.join(path1, name, name + ext1)
        fn2 = os.path.join(path2, name, name + ext2)

        if os.path.exists(fn1) and not os.path.exists(fn2):
            # make links relative
            if os.path.dirname(fn1) == os.path.dirname(fn2):
                fn1 = os.path.basename(fn1)
            else:
                fn1 = os.path.join("..", "..", fn1)
            
            print "%s <== %s" % (fn1, fn2)
            os.symlink(fn1, fn2)
