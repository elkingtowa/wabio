#!/usr/bin/env python
# run distance matrix programs with standard command-line interface

import sys, os, shutil
import optparse

from rasmus import util, treelib
from compbio import phylip, fasta, paml
from compbio import phylorun as phy


def write_dist_matrix(mat, labels, out=sys.stdout):
    out = util.open_stream(out, "w")
    
    out.write("%d\n" % len(mat))
    
    for i in range(len(mat)):
        out.write("%s  " % labels[i])        
        for val in mat[i]:
            out.write("%10f " % val)
        out.write("\n")

#=============================================================================

o = optparse.OptionParser()
o.add_option("-l", "--discard-labels", dest="discard_labels",
             action="store_true", default=False)
o.add_option("--dnds", dest="dnds", action="store_true")
phy.add_common_options(o, dist=True, tree=False)
conf, files = phy.parse_common_options(o)

#=============================================================================

result = 0
for fn in files:
    basename = phy.get_basename(fn, conf)
    
    outdir = basename + conf.outputext
    phy.make_output_dir(outdir)
    align = fasta.read_fasta(basename + conf.alignext)    

    if len(align) <= 2:
        continue
        
    # find distances
    distfile = basename + conf.distext
    if conf.dnds:
        # compute dn/ds
        dn, ds = paml.dndsMatrix(align, verbose=conf.verbose)

        #if discard_labels:
        #    labels = labels_num
        
        write_dist_matrix(dn[1], dn[0], out=distfile + ".dn")
        write_dist_matrix(ds[1], ds[0], out=distfile + ".ds")

    else:
        if conf.seqtype == "pep":
            # peptide distance
            labels = phylip.protdist(align, distfile, verbose=conf.verbose)
        
        else:
            # nucleotide distance
            labels = phylip.dnadist(align, distfile, verbose=conf.verbose)
    
        labels_num, distmat = phylip.read_dist_matrix(distfile)

        if conf.discard_labels:
            labels = labels_num
    
        write_dist_matrix(distmat, labels, distfile)


sys.exit(result)
